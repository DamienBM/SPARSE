close all;
%% Début programme
Im = im2double(imread('C:\Users\Damien\Documents\MATLAB\examen-TI\database\basket.jpg'));
infos = dir('C:\Users\Damien\Documents\MATLAB\examen-TI\database\basket.jpg');
init_byte = infos.bytes;

% figure;
% imshow(Im);

N=10;
taille = size(Im,1)*size(Im,2);

avg_erreur_fft = zeros(N,1);
avg_erreur_dct = zeros(N,1);

taux_compr_fft = zeros(N,1);
taux_compr_dct = zeros(N,1);

Im_fft = fft2(Im);

% figure;
% imshow(log(abs(Im_fft)));

Im_fft = fftshift(Im_fft);
Im_DCT = dct2(Im);

nb_bloc = 2;
bloc = log2(size(Im,1)/nb_bloc);
taille_block = 2^bloc;
nb_times = nb_bloc^2;

%% Boucle for pour DCT et TF globale (sur toute l'image)
for k = 1:N
    % Seuillage
    %k = 10;
    A_dct_max = max(max(abs(Im_DCT)));
    A_fft_max = max(max(abs(Im_fft)));
    seuil_fft = A_fft_max/(2^k);
    seuil_dct = A_dct_max/(2^k);

    Im_fft_th = zeros(size(Im_fft,1),size(Im_fft,2));
    Im_dct_th = zeros(size(Im_DCT,1),size(Im_DCT,2));
    
    nb_pixel_fft = 0;
    nb_pixel_dct = 0;

    for i=1:size(Im_fft,1)
        for j=1:size(Im_fft,2)
            if(abs(Im_fft(i,j))>=seuil_fft)
                Im_fft_th(i,j) = Im_fft(i,j);
                nb_pixel_fft = nb_pixel_fft +1;
            end
        end
    end

    for i=1:size(Im_DCT,1)
        for j=1:size(Im_DCT,2)
            if(abs(Im_DCT(i,j))>=seuil_dct)
                Im_dct_th(i,j) = Im_DCT(i,j);
                nb_pixel_dct = nb_pixel_dct +1;
            end
        end
    end

%     imwrite(Im_dct_th,'test_dct.jpg');
%     infos_compr_dct = dir('test_dct.jpg');
%     compr_byte_dct = infos_compr_dct.bytes;
%     
%     imwrite(Im_fft_th,'test_fft.jpg');
%     infos_compr_fft = dir('test_fft.jpg');
%     compr_byte_fft = infos_compr_fft.bytes;
    
    Im_ifft = ifftshift(Im_fft_th);
    Im_ifft = ifft2(Im_ifft);
    Im_iDCT = idct2(Im_dct_th);

    figure;
    imshow(Im_ifft);

    figure;
    imshow(Im_iDCT);

    % figure;
    % colormap gray;
    % imagesc(abs(Im_ifft));

    % figure;
    % colormap gray;
    % imagesc(Im_iDCT);

    % Calcul d'erreur : erreur quadratique moyenne (non perceptuels)

    erreur_fft = (Im - Im_ifft).^2;
    erreur_dct = (Im - Im_iDCT).^2;

    avg_erreur_fft(k,1) = mean(mean(erreur_fft));
    avg_erreur_dct(k,1) = mean(mean(erreur_dct));
   
    taux_compr_dct(k,1) = taille/nb_pixel_dct;
    taux_compr_fft(k,1) = taille/nb_pixel_fft;
    
end


%% Séparation de Im selon taille bloc

for j=1:nb_times
    Im_split(j,:,:) = 0;
end

%% Boucle parallèle pour DCT et TF locale (par bloc sur l'image)
parfor i=1:nb_times
    t = getCurrentTask();
    M = Im_split(i,:,:);
end


%% Affichage de l'erreur
figure;
plot(1:10,avg_erreur_fft);
ylabel('Valeur de l''erreur quadratique moyenne FFT');
xlabel('Valeurs de k (1 à 10)');
figure;
plot(1:10,avg_erreur_dct);
ylabel('Valeur de l''erreur quadratique moyenne DCT');
xlabel('Valeurs de k (1 à 10)');

%% Affichage taux de compression

figure;
plot(1:10,taux_compr_fft);
ylabel('Valeur du taux de compression FFT');
xlabel('Valeurs de k (1 à 10)');
figure;
plot(1:10,taux_compr_dct);
ylabel('Valeur du taux de compression DCT');
xlabel('Valeurs de k (1 à 10)');

%% Courbe erreur vs taux de compression
figure;
plot(taux_compr_fft,avg_erreur_fft);
hold on;
% figure;
plot(taux_compr_dct,avg_erreur_dct);